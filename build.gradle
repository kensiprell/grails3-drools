buildscript {
	ext {
		grailsVersion = project.grailsVersion
		drooolsConfigurationType = 'droolsConfigGroovy'
		droolsDrlFileLocation = 'src/rules'
	}
	repositories {
		mavenLocal()
		maven { url "http://repo.grails.org/grails/core" }
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.1.1'
	}
}

plugins {
	id "io.spring.dependency-management" version "0.3.1.RELEASE"
	id "com.jfrog.bintray" version "1.1"
}

version "0.1-SNAPSHOT"
group "org.grails.plugins"

apply plugin: "grails-drools"
apply plugin: "spring-boot"
apply plugin: "asset-pipeline"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
apply plugin: "maven-publish"
apply plugin: "eclipse"
apply plugin: "idea"
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
	grailsVersion = project.grailsVersion
	gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
	mavenLocal()
	mavenCentral()
	maven { url "https://repo.grails.org/grails/core" }
	maven { url "https://repository.jboss.org/nexus/content/repositories/public" }
}

dependencyManagement {
	imports {
		mavenBom "org.grails:grails-bom:$grailsVersion"
	}
	applyMavenExclusions false
}

dependencies {
	String comSunXmlBindVersion = "2.2.11"
	// TODO test with excludes
	String droolsVersion = "6.2.0.Final"
	provided "org.springframework.boot:spring-boot-starter-logging"
	provided "org.springframework.boot:spring-boot-starter-actuator"
	provided "org.springframework.boot:spring-boot-autoconfigure"
	provided "org.springframework.boot:spring-boot-starter-tomcat"
	provided "org.grails:grails-web-boot"
	provided "org.grails:grails-dependencies"
	provided 'javax.servlet:javax.servlet-api:3.1.0'
	console "org.grails:grails-console"
	testCompile "org.grails:grails-plugin-testing"
	// Drools dependencies
	compile "org.drools:drools-compiler:$droolsVersion"
	compile "org.drools:drools-core:$droolsVersion"
	compile "org.drools:drools-decisiontables:$droolsVersion"
	compile "org.drools:drools-jsr94:$droolsVersion"
	compile "org.drools:drools-verifier:$droolsVersion"
	compile "org.kie:kie-api:$droolsVersion"
	compile "org.kie:kie-internal:$droolsVersion"
	compile "org.kie:kie-spring:$droolsVersion"
	runtime "com.sun.xml.bind:jaxb-xjc:$comSunXmlBindVersion"
	runtime "com.sun.xml.bind:jaxb-impl:$comSunXmlBindVersion"
	runtime "org.codehaus.janino:janino:2.7.5"
	runtime "com.thoughtworks.xstream:xstream:1.4.7"
	runtime "org.eclipse.jdt.core.compiler:ecj:4.4"
	runtime "org.mvel:mvel2:2.2.2.Final"
	runtime "org.antlr:antlr-runtime:3.5.2"
}

eclipse {
	classpath {
		plusConfigurations += [configurations.provided]
	}
}

idea {
	module {
		scopes.PROVIDED.plus += [configurations.provided]
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = gradleWrapperVersion
}

jar {
	//exclude "grails/plugin/drools/test/**"
	exclude "rules.application.application.drl"
	exclude "rules.ticket.ticket.drl"
	exclude "drools-context.xml"
	exclude "DroolsConfig.groovy"
}
sourcesJar {
	//exclude "grails/plugin/drools/test/**"
	exclude "rules.application.application.drl"
	exclude "rules.ticket.ticket.drl"
	exclude "drools-context.xml"
	exclude "DroolsConfig.groovy"
}
javadocJar {
	//exclude "grails/plugin/drools/test/**"
}

publishing {
	publications {
		maven(MavenPublication) {
			pom.withXml {
				def pomNode = asNode()
				pomNode.dependencyManagement.replaceNode {}
				pomNode.dependencies.dependency.findAll {
					it.version.text().isEmpty()
				}.each {
					it.replaceNode {}
				}
			}
			artifactId project.name
			from components.java
			artifact sourcesJar
			artifact javadocJar
			artifact source: "$rootDir/buildSrc/build/libs/buildSrc.jar",
				classifier: "gradle-plugin",
				extension: "jar"
			artifact source: "${sourceSets.main.output.classesDir}/META-INF/grails-plugin.xml",
				classifier: "plugin",
				extension: "xml"
		}
	}
	if (project.hasProperty('grailsCentral')) {
		repositories {
			maven {
				credentials {
					username grailsPluginsUsername
					password grailsPluginsPassword
				}
				if (version.endsWith('-SNAPSHOT')) {
					url "https://repo.grails.org/grails/plugins3-snapshots-local"
				}
			}
		}
	} else {
		repositories {
			maven {
				credentials {
					username localArtifactoryUsername
					password localArtifactoryPassword
				}
				if (version.endsWith('-SNAPSHOT')) {
					url "http://localhost:8081/artifactory/plugins3-snapshot-local/"
				} else {
					url "http://localhost:8081/artifactory/plugins3-release-local/"
				}
			}
		}
	}
}

sourceSets {
	integrationTest {
		compileClasspath += sourceSets.test.compileClasspath
		runtimeClasspath += sourceSets.test.runtimeClasspath
	}
}

tasks.processResources.dependsOn(copyDroolsRule, writeDroolsContentXml)
//tasks.processResources.dependsOn(writeDroolsContentXml)

task install(dependsOn: project.tasks.withType(PublishToMavenLocal))


//println "TEST: " +
//configurations.testRuntime.properties.each { println it }

//sourceSets.integrationTest.runtimeClasspath.each { println "DROOLS: $it" }

//println "TEST compileClasspath: " + sourceSets.integrationTest.compileClasspath.sources
//println "TEST runtimeClasspath: " + sourceSets.integrationTest.runtimeClasspath.sources